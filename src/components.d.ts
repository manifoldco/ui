/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/state-tunnel';
import {
  Connection,
  Env,
} from './utils/connections';
import {
  UserFeatures,
} from 'types/UserFeatures';
import {
  Option,
} from 'types/Select';


export namespace Components {

  interface ManifoldActivePlan {
    'plans': Catalog.ExpandedPlan[];
    'product': Catalog.ExpandedProduct;
  }
  interface ManifoldActivePlanAttributes extends StencilHTMLAttributes {
    'plans'?: Catalog.ExpandedPlan[];
    'product'?: Catalog.ExpandedProduct;
  }

  interface ManifoldBadge {}
  interface ManifoldBadgeAttributes extends StencilHTMLAttributes {}

  interface ManifoldConnection {
    'env': Env;
  }
  interface ManifoldConnectionAttributes extends StencilHTMLAttributes {
    'env'?: Env;
  }

  interface ManifoldFeaturedService {
    'logo': string;
    'name': string;
    'serviceColorId': string;
  }
  interface ManifoldFeaturedServiceAttributes extends StencilHTMLAttributes {
    'logo'?: string;
    'name'?: string;
    'serviceColorId'?: string;
  }

  interface ManifoldIcon {
    /**
    * a CSS variable starting with `--mf-c-*`
    */
    'color': string;
    /**
    * a CSS variable starting with `--mf-g-*`
    */
    'gradient'?: string;
    /**
    * The icon ID
    */
    'icon': string;
    'marginLeft': boolean;
    'marginRight': boolean;
    'title': string;
  }
  interface ManifoldIconAttributes extends StencilHTMLAttributes {
    /**
    * a CSS variable starting with `--mf-c-*`
    */
    'color'?: string;
    /**
    * a CSS variable starting with `--mf-g-*`
    */
    'gradient'?: string;
    /**
    * The icon ID
    */
    'icon'?: string;
    'marginLeft'?: boolean;
    'marginRight'?: boolean;
    'title'?: string;
  }

  interface ManifoldImageGallery {
    'images': string[];
    'title': string;
  }
  interface ManifoldImageGalleryAttributes extends StencilHTMLAttributes {
    'images'?: string[];
    'title'?: string;
  }

  interface ManifoldLinkButton {
    'href': string;
    'rel'?: string;
    'target'?: string;
  }
  interface ManifoldLinkButtonAttributes extends StencilHTMLAttributes {
    'href'?: string;
    'rel'?: string;
    'target'?: string;
  }

  interface ManifoldMarketplaceResults {
    'featured'?: string;
    'serviceLink'?: string;
    'services': Catalog.Product[];
  }
  interface ManifoldMarketplaceResultsAttributes extends StencilHTMLAttributes {
    'featured'?: string;
    'serviceLink'?: string;
    'services'?: Catalog.Product[];
  }

  interface ManifoldMarketplace {
    'connection': Connection;
    'featured'?: string;
    'serviceLink'?: string;
  }
  interface ManifoldMarketplaceAttributes extends StencilHTMLAttributes {
    'connection'?: Connection;
    'featured'?: string;
    'serviceLink'?: string;
  }

  interface ManifoldNumberInput {
    'decrementDisabledLabel'?: string;
    'error'?: string;
    'increment': number;
    'incrementDisabledLabel'?: string;
    'max': number;
    'min': number;
    'name': string;
    'suffix': string;
    'value': number;
  }
  interface ManifoldNumberInputAttributes extends StencilHTMLAttributes {
    'decrementDisabledLabel'?: string;
    'error'?: string;
    'increment'?: number;
    'incrementDisabledLabel'?: string;
    'max'?: number;
    'min'?: number;
    'name'?: string;
    'onUpdateValue'?: (event: CustomEvent) => void;
    'suffix'?: string;
    'value'?: number;
  }

  interface ManifoldPlanDetails {
    'plan': Catalog.ExpandedPlan;
    'product': Catalog.Product;
  }
  interface ManifoldPlanDetailsAttributes extends StencilHTMLAttributes {
    'plan'?: Catalog.ExpandedPlan;
    'product'?: Catalog.Product;
  }

  interface ManifoldPlanMenu {
    'plans': Catalog.ExpandedPlan[];
    'selectPlan': Function;
    'selectedPlanId': string;
  }
  interface ManifoldPlanMenuAttributes extends StencilHTMLAttributes {
    'plans'?: Catalog.ExpandedPlan[];
    'selectPlan'?: Function;
    'selectedPlanId'?: string;
  }

  interface ManifoldPlanSelector {
    'connection': Connection;
    'productId': string;
  }
  interface ManifoldPlanSelectorAttributes extends StencilHTMLAttributes {
    'connection'?: Connection;
    'productId'?: string;
  }

  interface ManifoldProductCost {
    'connection': Connection;
    'features': UserFeatures;
    'planID': string;
  }
  interface ManifoldProductCostAttributes extends StencilHTMLAttributes {
    'connection'?: Connection;
    'features'?: UserFeatures;
    'planID'?: string;
  }

  interface ManifoldProductDetails {
    'product': Catalog.ExpandedProduct;
  }
  interface ManifoldProductDetailsAttributes extends StencilHTMLAttributes {
    'product'?: Catalog.ExpandedProduct;
  }

  interface ManifoldProductPage {
    'product': Catalog.ExpandedProduct;
  }
  interface ManifoldProductPageAttributes extends StencilHTMLAttributes {
    'product'?: Catalog.ExpandedProduct;
  }

  interface ManifoldProduct {
    'connection': Connection;
    'productLabel': string;
  }
  interface ManifoldProductAttributes extends StencilHTMLAttributes {
    'connection'?: Connection;
    'productLabel'?: string;
  }

  interface ManifoldSelect {
    'defaultValue'?: string;
    'name': string;
    'options': Option[];
    'required'?: boolean;
  }
  interface ManifoldSelectAttributes extends StencilHTMLAttributes {
    'defaultValue'?: string;
    'name'?: string;
    'onUpdateValue'?: (event: CustomEvent) => void;
    'options'?: Option[];
    'required'?: boolean;
  }

  interface ManifoldServiceCard {
    'description'?: string;
    'isCustom'?: boolean;
    'isFeatured'?: boolean;
    'label'?: string;
    'logo'?: string;
    'name'?: string;
    'serviceLink'?: string;
  }
  interface ManifoldServiceCardAttributes extends StencilHTMLAttributes {
    'description'?: string;
    'isCustom'?: boolean;
    'isFeatured'?: boolean;
    'label'?: string;
    'logo'?: string;
    'name'?: string;
    'onManifold-serviceCard-click'?: (event: CustomEvent) => void;
    'serviceLink'?: string;
  }

  interface ManifoldServiceCategory {
    'categoryLoaded'?: (el?: HTMLElement) => void;
    'icon'?: string;
    'label': string;
    'name': string;
    'tagline'?: string;
  }
  interface ManifoldServiceCategoryAttributes extends StencilHTMLAttributes {
    'categoryLoaded'?: (el?: HTMLElement) => void;
    'icon'?: string;
    'label'?: string;
    'name'?: string;
    'tagline'?: string;
  }

  interface ManifoldServiceGrid {}
  interface ManifoldServiceGridAttributes extends StencilHTMLAttributes {}

  interface ManifoldServicesTunnel {
    'featured'?: string;
    'serviceLink'?: string;
    'services': Catalog.Product[];
  }
  interface ManifoldServicesTunnelAttributes extends StencilHTMLAttributes {
    'featured'?: string;
    'serviceLink'?: string;
    'services'?: Catalog.Product[];
  }

  interface ManifoldSortedCategories {
    'observeCategory': (el?: HTMLElement) => void;
  }
  interface ManifoldSortedCategoriesAttributes extends StencilHTMLAttributes {
    'observeCategory'?: (el?: HTMLElement) => void;
  }

  interface ManifoldToggle {
    'ariaLabelledby'?: string;
    'defaultValue'?: boolean;
    'disabled'?: boolean;
    'label'?: string;
    'name': string;
  }
  interface ManifoldToggleAttributes extends StencilHTMLAttributes {
    'ariaLabelledby'?: string;
    'defaultValue'?: boolean;
    'disabled'?: boolean;
    'label'?: string;
    'name'?: string;
    'onUpdateValue'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'ManifoldActivePlan': Components.ManifoldActivePlan;
    'ManifoldBadge': Components.ManifoldBadge;
    'ManifoldConnection': Components.ManifoldConnection;
    'ManifoldFeaturedService': Components.ManifoldFeaturedService;
    'ManifoldIcon': Components.ManifoldIcon;
    'ManifoldImageGallery': Components.ManifoldImageGallery;
    'ManifoldLinkButton': Components.ManifoldLinkButton;
    'ManifoldMarketplaceResults': Components.ManifoldMarketplaceResults;
    'ManifoldMarketplace': Components.ManifoldMarketplace;
    'ManifoldNumberInput': Components.ManifoldNumberInput;
    'ManifoldPlanDetails': Components.ManifoldPlanDetails;
    'ManifoldPlanMenu': Components.ManifoldPlanMenu;
    'ManifoldPlanSelector': Components.ManifoldPlanSelector;
    'ManifoldProductCost': Components.ManifoldProductCost;
    'ManifoldProductDetails': Components.ManifoldProductDetails;
    'ManifoldProductPage': Components.ManifoldProductPage;
    'ManifoldProduct': Components.ManifoldProduct;
    'ManifoldSelect': Components.ManifoldSelect;
    'ManifoldServiceCard': Components.ManifoldServiceCard;
    'ManifoldServiceCategory': Components.ManifoldServiceCategory;
    'ManifoldServiceGrid': Components.ManifoldServiceGrid;
    'ManifoldServicesTunnel': Components.ManifoldServicesTunnel;
    'ManifoldSortedCategories': Components.ManifoldSortedCategories;
    'ManifoldToggle': Components.ManifoldToggle;
  }

  interface StencilIntrinsicElements {
    'manifold-active-plan': Components.ManifoldActivePlanAttributes;
    'manifold-badge': Components.ManifoldBadgeAttributes;
    'manifold-connection': Components.ManifoldConnectionAttributes;
    'manifold-featured-service': Components.ManifoldFeaturedServiceAttributes;
    'manifold-icon': Components.ManifoldIconAttributes;
    'manifold-image-gallery': Components.ManifoldImageGalleryAttributes;
    'manifold-link-button': Components.ManifoldLinkButtonAttributes;
    'manifold-marketplace-results': Components.ManifoldMarketplaceResultsAttributes;
    'manifold-marketplace': Components.ManifoldMarketplaceAttributes;
    'manifold-number-input': Components.ManifoldNumberInputAttributes;
    'manifold-plan-details': Components.ManifoldPlanDetailsAttributes;
    'manifold-plan-menu': Components.ManifoldPlanMenuAttributes;
    'manifold-plan-selector': Components.ManifoldPlanSelectorAttributes;
    'manifold-product-cost': Components.ManifoldProductCostAttributes;
    'manifold-product-details': Components.ManifoldProductDetailsAttributes;
    'manifold-product-page': Components.ManifoldProductPageAttributes;
    'manifold-product': Components.ManifoldProductAttributes;
    'manifold-select': Components.ManifoldSelectAttributes;
    'manifold-service-card': Components.ManifoldServiceCardAttributes;
    'manifold-service-category': Components.ManifoldServiceCategoryAttributes;
    'manifold-service-grid': Components.ManifoldServiceGridAttributes;
    'manifold-services-tunnel': Components.ManifoldServicesTunnelAttributes;
    'manifold-sorted-categories': Components.ManifoldSortedCategoriesAttributes;
    'manifold-toggle': Components.ManifoldToggleAttributes;
  }


  interface HTMLManifoldActivePlanElement extends Components.ManifoldActivePlan, HTMLStencilElement {}
  var HTMLManifoldActivePlanElement: {
    prototype: HTMLManifoldActivePlanElement;
    new (): HTMLManifoldActivePlanElement;
  };

  interface HTMLManifoldBadgeElement extends Components.ManifoldBadge, HTMLStencilElement {}
  var HTMLManifoldBadgeElement: {
    prototype: HTMLManifoldBadgeElement;
    new (): HTMLManifoldBadgeElement;
  };

  interface HTMLManifoldConnectionElement extends Components.ManifoldConnection, HTMLStencilElement {}
  var HTMLManifoldConnectionElement: {
    prototype: HTMLManifoldConnectionElement;
    new (): HTMLManifoldConnectionElement;
  };

  interface HTMLManifoldFeaturedServiceElement extends Components.ManifoldFeaturedService, HTMLStencilElement {}
  var HTMLManifoldFeaturedServiceElement: {
    prototype: HTMLManifoldFeaturedServiceElement;
    new (): HTMLManifoldFeaturedServiceElement;
  };

  interface HTMLManifoldIconElement extends Components.ManifoldIcon, HTMLStencilElement {}
  var HTMLManifoldIconElement: {
    prototype: HTMLManifoldIconElement;
    new (): HTMLManifoldIconElement;
  };

  interface HTMLManifoldImageGalleryElement extends Components.ManifoldImageGallery, HTMLStencilElement {}
  var HTMLManifoldImageGalleryElement: {
    prototype: HTMLManifoldImageGalleryElement;
    new (): HTMLManifoldImageGalleryElement;
  };

  interface HTMLManifoldLinkButtonElement extends Components.ManifoldLinkButton, HTMLStencilElement {}
  var HTMLManifoldLinkButtonElement: {
    prototype: HTMLManifoldLinkButtonElement;
    new (): HTMLManifoldLinkButtonElement;
  };

  interface HTMLManifoldMarketplaceResultsElement extends Components.ManifoldMarketplaceResults, HTMLStencilElement {}
  var HTMLManifoldMarketplaceResultsElement: {
    prototype: HTMLManifoldMarketplaceResultsElement;
    new (): HTMLManifoldMarketplaceResultsElement;
  };

  interface HTMLManifoldMarketplaceElement extends Components.ManifoldMarketplace, HTMLStencilElement {}
  var HTMLManifoldMarketplaceElement: {
    prototype: HTMLManifoldMarketplaceElement;
    new (): HTMLManifoldMarketplaceElement;
  };

  interface HTMLManifoldNumberInputElement extends Components.ManifoldNumberInput, HTMLStencilElement {}
  var HTMLManifoldNumberInputElement: {
    prototype: HTMLManifoldNumberInputElement;
    new (): HTMLManifoldNumberInputElement;
  };

  interface HTMLManifoldPlanDetailsElement extends Components.ManifoldPlanDetails, HTMLStencilElement {}
  var HTMLManifoldPlanDetailsElement: {
    prototype: HTMLManifoldPlanDetailsElement;
    new (): HTMLManifoldPlanDetailsElement;
  };

  interface HTMLManifoldPlanMenuElement extends Components.ManifoldPlanMenu, HTMLStencilElement {}
  var HTMLManifoldPlanMenuElement: {
    prototype: HTMLManifoldPlanMenuElement;
    new (): HTMLManifoldPlanMenuElement;
  };

  interface HTMLManifoldPlanSelectorElement extends Components.ManifoldPlanSelector, HTMLStencilElement {}
  var HTMLManifoldPlanSelectorElement: {
    prototype: HTMLManifoldPlanSelectorElement;
    new (): HTMLManifoldPlanSelectorElement;
  };

  interface HTMLManifoldProductCostElement extends Components.ManifoldProductCost, HTMLStencilElement {}
  var HTMLManifoldProductCostElement: {
    prototype: HTMLManifoldProductCostElement;
    new (): HTMLManifoldProductCostElement;
  };

  interface HTMLManifoldProductDetailsElement extends Components.ManifoldProductDetails, HTMLStencilElement {}
  var HTMLManifoldProductDetailsElement: {
    prototype: HTMLManifoldProductDetailsElement;
    new (): HTMLManifoldProductDetailsElement;
  };

  interface HTMLManifoldProductPageElement extends Components.ManifoldProductPage, HTMLStencilElement {}
  var HTMLManifoldProductPageElement: {
    prototype: HTMLManifoldProductPageElement;
    new (): HTMLManifoldProductPageElement;
  };

  interface HTMLManifoldProductElement extends Components.ManifoldProduct, HTMLStencilElement {}
  var HTMLManifoldProductElement: {
    prototype: HTMLManifoldProductElement;
    new (): HTMLManifoldProductElement;
  };

  interface HTMLManifoldSelectElement extends Components.ManifoldSelect, HTMLStencilElement {}
  var HTMLManifoldSelectElement: {
    prototype: HTMLManifoldSelectElement;
    new (): HTMLManifoldSelectElement;
  };

  interface HTMLManifoldServiceCardElement extends Components.ManifoldServiceCard, HTMLStencilElement {}
  var HTMLManifoldServiceCardElement: {
    prototype: HTMLManifoldServiceCardElement;
    new (): HTMLManifoldServiceCardElement;
  };

  interface HTMLManifoldServiceCategoryElement extends Components.ManifoldServiceCategory, HTMLStencilElement {}
  var HTMLManifoldServiceCategoryElement: {
    prototype: HTMLManifoldServiceCategoryElement;
    new (): HTMLManifoldServiceCategoryElement;
  };

  interface HTMLManifoldServiceGridElement extends Components.ManifoldServiceGrid, HTMLStencilElement {}
  var HTMLManifoldServiceGridElement: {
    prototype: HTMLManifoldServiceGridElement;
    new (): HTMLManifoldServiceGridElement;
  };

  interface HTMLManifoldServicesTunnelElement extends Components.ManifoldServicesTunnel, HTMLStencilElement {}
  var HTMLManifoldServicesTunnelElement: {
    prototype: HTMLManifoldServicesTunnelElement;
    new (): HTMLManifoldServicesTunnelElement;
  };

  interface HTMLManifoldSortedCategoriesElement extends Components.ManifoldSortedCategories, HTMLStencilElement {}
  var HTMLManifoldSortedCategoriesElement: {
    prototype: HTMLManifoldSortedCategoriesElement;
    new (): HTMLManifoldSortedCategoriesElement;
  };

  interface HTMLManifoldToggleElement extends Components.ManifoldToggle, HTMLStencilElement {}
  var HTMLManifoldToggleElement: {
    prototype: HTMLManifoldToggleElement;
    new (): HTMLManifoldToggleElement;
  };

  interface HTMLElementTagNameMap {
    'manifold-active-plan': HTMLManifoldActivePlanElement
    'manifold-badge': HTMLManifoldBadgeElement
    'manifold-connection': HTMLManifoldConnectionElement
    'manifold-featured-service': HTMLManifoldFeaturedServiceElement
    'manifold-icon': HTMLManifoldIconElement
    'manifold-image-gallery': HTMLManifoldImageGalleryElement
    'manifold-link-button': HTMLManifoldLinkButtonElement
    'manifold-marketplace-results': HTMLManifoldMarketplaceResultsElement
    'manifold-marketplace': HTMLManifoldMarketplaceElement
    'manifold-number-input': HTMLManifoldNumberInputElement
    'manifold-plan-details': HTMLManifoldPlanDetailsElement
    'manifold-plan-menu': HTMLManifoldPlanMenuElement
    'manifold-plan-selector': HTMLManifoldPlanSelectorElement
    'manifold-product-cost': HTMLManifoldProductCostElement
    'manifold-product-details': HTMLManifoldProductDetailsElement
    'manifold-product-page': HTMLManifoldProductPageElement
    'manifold-product': HTMLManifoldProductElement
    'manifold-select': HTMLManifoldSelectElement
    'manifold-service-card': HTMLManifoldServiceCardElement
    'manifold-service-category': HTMLManifoldServiceCategoryElement
    'manifold-service-grid': HTMLManifoldServiceGridElement
    'manifold-services-tunnel': HTMLManifoldServicesTunnelElement
    'manifold-sorted-categories': HTMLManifoldSortedCategoriesElement
    'manifold-toggle': HTMLManifoldToggleElement
  }

  interface ElementTagNameMap {
    'manifold-active-plan': HTMLManifoldActivePlanElement;
    'manifold-badge': HTMLManifoldBadgeElement;
    'manifold-connection': HTMLManifoldConnectionElement;
    'manifold-featured-service': HTMLManifoldFeaturedServiceElement;
    'manifold-icon': HTMLManifoldIconElement;
    'manifold-image-gallery': HTMLManifoldImageGalleryElement;
    'manifold-link-button': HTMLManifoldLinkButtonElement;
    'manifold-marketplace-results': HTMLManifoldMarketplaceResultsElement;
    'manifold-marketplace': HTMLManifoldMarketplaceElement;
    'manifold-number-input': HTMLManifoldNumberInputElement;
    'manifold-plan-details': HTMLManifoldPlanDetailsElement;
    'manifold-plan-menu': HTMLManifoldPlanMenuElement;
    'manifold-plan-selector': HTMLManifoldPlanSelectorElement;
    'manifold-product-cost': HTMLManifoldProductCostElement;
    'manifold-product-details': HTMLManifoldProductDetailsElement;
    'manifold-product-page': HTMLManifoldProductPageElement;
    'manifold-product': HTMLManifoldProductElement;
    'manifold-select': HTMLManifoldSelectElement;
    'manifold-service-card': HTMLManifoldServiceCardElement;
    'manifold-service-category': HTMLManifoldServiceCategoryElement;
    'manifold-service-grid': HTMLManifoldServiceGridElement;
    'manifold-services-tunnel': HTMLManifoldServicesTunnelElement;
    'manifold-sorted-categories': HTMLManifoldSortedCategoriesElement;
    'manifold-toggle': HTMLManifoldToggleElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}

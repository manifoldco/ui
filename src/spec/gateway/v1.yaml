
# THIS FILE IS AUTO-GENERATED BY THE GATEWAY BLENDER
# DO NOT DIRECTLY EDIT THIS FILE
# edit v1.yaml.in instead, and use the gateway-blender tool
#

swagger: "2.0"
info:
  title: gateway API
  description: Manifold API
  version: 1.0.0
host: api.manifold.co
schemes:
- https
produces:
- application/json
consumes:
- application/json
securityDefinitions:
  tokenRequired:
    type: apiKey
    name: Authorization
    in: header
  anonymous:
    type: apiKey
    name: Manifold-Anonymous
    in: header
basePath: /v1
paths:
  /products/:
    get:
      security:
      - tokenRequired: []
      - anonymous: []
      summary: List all available products
      parameters:
      - name: provider_id
        in: query
        description: |
          Base32 encoded 18 byte identifier of the provider that these
          products must belong to.
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      - name: include_plans
        in: query
        description: Return product listings without plan information
        type: boolean
        default: true
      tags:
      - Product
      responses:
        200:
          description: A list of products.
          schema:
            type: array
            items:
              $ref: '#/definitions/ResolvedProduct'
        400:
          description: Invalid provider_id supplied
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /id/product/{id}:
    get:
      summary: Get information about a product
      description: Get information about the specified product
      tags:
      - Product
      security:
      - tokenRequired: []
      - anonymous: []
      parameters:
      - name: id
        in: path
        description: |
          Retrieve information about a product based on it's ID.
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
        required: true
      responses:
        200:
          description: A Product
          schema:
            $ref: '#/definitions/ResolvedProduct'
        400:
          description: Provided Product ID or Label is not valid
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Product not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /product/{label}:
    get:
      summary: Get information about a product
      description: Get information about the specified product
      tags:
      - Product
      security:
      - tokenRequired: []
      - anonymous: []
      parameters:
      - name: label
        in: path
        description: |
          Retrieve information about a product based on it's label.
        type: string
        pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
        required: true
      responses:
        200:
          description: A Product
          schema:
            $ref: '#/definitions/ResolvedProduct'
        400:
          description: Provided Product ID or Label is not valid
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Product not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /resource:
    post:
      summary: Create a new Resource
      description: Create a new resource, and returns the details about it
      tags:
      - Resources
      security:
      - tokenRequired: []
      parameters:
      - name: body
        in: body
        description: Information to provision a new Resource
        required: true
        schema:
          $ref: '#/definitions/ResourceCreateRequest'
      responses:
        200:
          description: The new Resource
          schema:
            $ref: '#/definitions/Resource'
        400:
          description: Provided Resource is invalid
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized creation request
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Resource already exists
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /resources/me/{resource_label}/:
    get:
      summary: Get information about a resource from it's label
      description: |
        Get information about the resource and it's operational status. The resource will be fetched from
        the list of resources owned by the user.
      tags:
      - Resources
      security:
      - tokenRequired: []
      parameters:
      - name: resource_label
        in: path
        description: |
          Retrieve information about a resource based on it's label. This will return information
          about a created resource, or an in-flight resource
        required: true
        type: string
        pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
      - name: product_label
        in: query
        description: |
          Label of the Product to filter Resources by.
        type: string
        pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
        required: false
      - name: project_label
        in: query
        description: |
          Label of the Project to filter Resources by.
        type: string
        pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
        required: false
      responses:
        200:
          description: A resource
          schema:
            $ref: '#/definitions/Resource'
        400:
          description: Provided resource ID is not valid
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /resources/{team_label}/{resource_label}/:
    get:
      summary: Get information about a resource from it's label
      description: |
        Get information about the resource and it's operational status. The resource will be fetched from
        the list of resources owned by the team.
      tags:
      - Resources
      security:
      - tokenRequired: []
      parameters:
      - name: resource_label
        in: path
        description: |
          Retrieve information about a resource based on it's label. This will return information
          about a created resource, or an in-flight resource
        required: true
        type: string
        pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
      - name: team_label
        in: path
        description: |
          Label of the Team to fetch resources from.
        required: true
        type: string
        pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
      - name: product_label
        in: query
        description: |
          Label of the Product to filter Resources by.
        type: string
        pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
        required: false
      - name: project_label
        in: query
        description: |
          Label of the Project to filter Resources by.
        type: string
        pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
        required: false
      responses:
        200:
          description: A resource
          schema:
            $ref: '#/definitions/Resource'
        400:
          description: Provided resource ID is not valid
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /id/resource/{id}:
    get:
      summary: Get information about a resource
      description: Get information about the resource and it's operational status
      tags:
      - Resources
      security:
      - tokenRequired: []
      parameters:
      - name: id
        in: path
        description: |
          Retrieve information about a resource based on it's ID. This will return information
          about a created resource, or an in-flight resource
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      responses:
        200:
          description: A resource
          schema:
            $ref: '#/definitions/Resource'
        400:
          description: Provided resource ID is not valid
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update an existing resource
      description: Updates an existing resource
      tags:
      - Resources
      security:
      - tokenRequired: []
      parameters:
      - name: id
        in: path
        description: |
          The ID of the resource to update
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      - name: body
        in: body
        description: Information to provision a new Resource
        required: true
        schema:
          $ref: '#/definitions/ResourceUpdateRequest'
      responses:
        200:
          description: The updated Resource
          schema:
            $ref: '#/definitions/Resource'
        400:
          description: Provided Resource is invalid
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized creation request
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Resource update is already in-progress
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete an existing resource
      description: Deletes an existing resource
      tags:
      - Resources
      security:
      - tokenRequired: []
      parameters:
      - name: id
        in: path
        description: The ID of the resource to delete
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      responses:
        202:
          description: The resource has been scheduled for deprovisioning
        400:
          description: Provided Resource is invalid
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized delete request
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Resource operation is already in-progress
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /id/plan/{id}/cost:
    post:
      summary: Get plan cost
      description: Get how much a plan would cost when using a set of features
      tags:
      - Plans
      security:
      - tokenRequired: []
      - anonymous: []
      parameters:
      - name: id
        in: path
        description: |
          Retrieve information about a plan based on it's ID.
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      - name: body
        in: body
        description: Plan cost calculation request
        required: true
        schema:
          $ref: '#/definitions/PlanCostRequest'
      responses:
        200:
          description: Plan cost calculation response
          schema:
            $ref: '#/definitions/PlanCostResponse'
        400:
          description: Provided resource ID is not valid
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  CatalogFeatureNumericDetails:
    x-go-type:
      type: FeatureNumericDetails
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    type: object
    description: |
      Optional container for additional details relating to numeric features.
      This is required if the feature is measurable and numeric.
    properties:
      increment:
        type: integer
        minimum: 0
        default: 1
        description: |
          Sets the increment at which numbers can be selected if customizable, by
          default this is 1; for example, setting this to 8 would only allow integers
          in increments of 8 ( 0, 8, 16, ... ). This property is not used if the
          feature is measurable; except if it is set to 0, setting the increment to 0
          means this numeric details has no scale, and will not be or customizable.
          Some plans may not have a measureable or customizable feature.
        x-nullable: false
      min:
        type: integer
        default: 0
        minimum: 0
        description: Minimum value that can be set by a user if customizable
        x-nullable: false
      max:
        type: integer
        minimum: 1
        description: Maximum value that can be set by a user if customizable
        x-nullable: true
      suffix:
        type: string
        description: Applied to the end of the number for display, for example the
          ‘GB’ in ‘20 GB’.
        x-nullable: true
      cost_ranges:
        type: array
        items:
          $ref: '#/definitions/CatalogFeatureNumericRange'
        x-nullable: true
    x-nullable: true
  CatalogFeatureNumericRange:
    x-go-type:
      type: FeatureNumericRange
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    type: object
    properties:
      limit:
        type: integer
        minimum: -1
        description: |
          Defines the end of the range ( inclusive ), from the previous, or 0;
          where the cost_multiple starts taking effect. If set to -1 this defines the
          range to infinity, or the maximum integer the system can handle
          ( whichever comes first ).
        x-nullable: false
      cost_multiple:
        type: integer
        default: 0
        minimum: 0
        description: |
          An integer in 10,000,000ths of cents, will be multiplied by the
          numeric value set in the feature to determine the cost.
        x-nullable: false
  CatalogFeatureType:
    x-go-type:
      type: FeatureType
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    description: |
      A feature type represents the different aspects of a product that are
      offered, these features can manifest differently depending on the plan.
    type: object
    properties:
      label:
        $ref: '#/definitions/Label'
      name:
        $ref: '#/definitions/Name'
      type:
        type: string
        enum:
        - boolean
        - string
        - number
      customizable:
        type: boolean
        default: false
        description: This sets whether or not the feature can be customized by a consumer.
        x-nullable: false
      upgradable:
        type: boolean
        default: false
        description: |
          This sets whether or not the feature can be upgraded by the consumer after the
          resource has provisioned. Upgrading means setting a higher value or selecting a
          higher element in the list.
        x-nullable: false
      downgradable:
        type: boolean
        default: false
        description: |
          This sets whether or not the feature can be downgraded by the consumer after the
          resource has provisioned. Downgrading means setting a lower value or selecting a
          lower element in the list.
        x-nullable: false
      measurable:
        type: boolean
        default: false
        description: |
          Sets if this feature’s value is trackable from the provider,
          this only really affects numeric constraints.
        x-nullable: false
      values:
        $ref: '#/definitions/CatalogFeatureValuesList'
    additionalProperties: false
    required:
    - label
    - name
    - type
  CatalogFeatureValueDetails:
    x-go-type:
      type: FeatureValueDetails
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    type: object
    properties:
      label:
        $ref: '#/definitions/CatalogFeatureValueLabel'
      name:
        $ref: '#/definitions/Name'
      cost:
        type: integer
        minimum: 0
        default: 0
        description: |
          The cost that will be added to the monthly plan cost when this value
          is selected or is default for the plan.
          Cost is deprecated in favor of the `price.cost` field.
        x-nullable: false
      price:
        type: object
        properties:
          cost:
            type: integer
            minimum: 0
            default: 0
            x-nullable: false
            description: |
              Cost is the price in cents that will be added to plan's base cost
              when this value is selected or is default for the plan.
              Number features should use the cost range instead.
          multiply_factor:
            type: number
            minimum: 0
            default: 0
            x-nullable: false
            description: |
              When a feature is used to multiply the cost of the plan or of
              another feature, multiply factor is used for calculation.
              A feature cannot have both a cost and a multiply factor.
          formula:
            $ref: '#/definitions/CatalogPriceFormula'
            description: |
              Price describes how the feature cost should be calculated.
            example:
              feature_multiplies_base_cost: (* plan#base_cost feature-a#multiply_factor)
              feature_multiplies_feature_cost: (* feature-b#cost feature-a#multiply_factor)
              feature_multiplies_numeric_value: (* feature-c#number feature-a#multiply_factor)
              feature_multiplies_total_cost: (* plan#total_cost feature-a#multiply_factor)
              feature_nested_formulas: (+ (- (* feature-a#cost feature-b#multiply_factor)
                500) plan#partial_cost)
          description:
            type: string
            description: |
              Description explains how a feature is calculated to the user.
        description: |
          Price describes the cost of a feature. It should be preferred over
          the `cost` property.
        additionalProperties: false
      numeric_details:
        $ref: '#/definitions/CatalogFeatureNumericDetails'
    additionalProperties: false
    required:
    - label
    - name
  CatalogFeatureValue:
    x-go-type:
      type: FeatureValue
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
    type: object
    properties:
      feature:
        $ref: '#/definitions/Label'
      value:
        $ref: '#/definitions/CatalogFeatureValueLabel'
    additionalProperties: false
    required:
    - feature
    - value
  CatalogExpandedFeature:
    x-go-type:
      type: ExpandedFeature
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
    type: object
    allOf:
    - $ref: '#/definitions/CatalogFeatureType'
    - type: object
      properties:
        value_string:
          type: string
          description: |
            The string value set for the feature on the plan, this should only be used if the value property is null.
        value:
          $ref: '#/definitions/CatalogFeatureValueDetails'
      additionalProperties: false
      required:
      - value_string
      - value
  CatalogFeatureValueLabel:
    x-go-type:
      type: FeatureValueLabel
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
    type: string
    description: A machine readable unique label, which is url safe.
    pattern: ^[a-z0-9][a-z0-9-_\.]{1,128}$
  CatalogFeatureValuesList:
    x-go-type:
      type: FeatureValuesList
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    type: array
    description: |
      A list of allowable values for the feature.
      To define values for a boolean feature type, only `true` is required,
      using the label `true`, name and numeric_details will be ignored.
      If the feature is set measurable it is expected that these all have a
      `numeric_details` definition, and the plan will determine which
      `numeric_details` set is used based on it's setting.
    items:
      $ref: '#/definitions/CatalogFeatureValueDetails'
    x-nullable: true
  CatalogPriceFormula:
    x-go-type:
      type: PriceFormula
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    type: string
    x-nullable: false
    description: |
      Describes how a feature cost should be calculated. An empty
      string defaults to the normal price calculation using the value cost.
      Formula uses Reverse Polish notation for statements. It supports
      addition, subtraction and multiplication operations. Operations must be
      grouped with parenthesis.
      Number literals can be used for formulas. Eg: "(- feature-a#cost 500)"
      will remove 5 dollars from the cost of feature a.
      Multiplication operation supports either a cost multiplied by a
      factor or a number multiplied by a factor.
      In a plan formula the following keywords are available:
        - `plan#base_cost` is the base cost of a plan in cents
        - `plan#partial_cost` is the base cost plus its feature costs calculated
          so far. Feature formulas are calculated in the order they are defined,
          so features can refer to another feature values or the partial_cost of
          the plan.
        - `this-feature-label#multiply_factor` is the multiply_factor of this
          feature as a float number.
        - `another-feature-label#cost` is the cost of a feature matching the label
          in cents.
        - `another-feature-label#number` is the numeric value of a number feature
      In a feature formula, plan base cost and total cost cannot be used
  CatalogProductBody:
    type: object
    x-go-type:
      type: ProductBody
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    properties:
      provider_id:
        $ref: '#/definitions/ID'
      label:
        $ref: '#/definitions/Label'
        description: |
          Product labels are globally unique and contain the provider name.
      name:
        $ref: '#/definitions/Name'
      state:
        type: string
        enum:
        - available
        - hidden
        - grandfathered
        - new
        - upcoming
      listing:
        type: object
        properties:
          public:
            type: boolean
            default: false
            description: |
              When true, everyone can see the product when requested. When false it will
              not be visible to anyone except those on the provider team.
          listed:
            type: boolean
            default: false
            description: |
              When true, the product will be displayed in product listings alongside
              other products. When false the product will be excluded from listings,
              but can still be provisioned directly if it's label is known.
              Any pages that display information about the product when not listed,
              should indicate to webcrawlers that the content should not be indexed.
          marketing:
            type: object
            description: |
              Object to hold various flags for marketing purposes only. These are values
              that need to be stored, but should not affect decision making in code. If
              we find ourselves in a position where we think they should, we should
              consider refactoring our listing definition.
            properties:
              beta:
                type: boolean
                default: false
                description: |
                  Indicates whether or not the product is in `Beta` and should be
                  advertised as such. This does not have any impact on who can access the
                  product, it is just used to inform consumers through our clients.
              new:
                type: boolean
                default: false
                description: |
                  Indicates whether or not the product is in `New` and should be
                  advertised as such. This does not have any impact on who can access the
                  product, it is just used to inform consumers through our clients.
              featured:
                type: boolean
                default: false
                description: |
                  Indicates whether or not the product is in `New` and should be
                  advertised as such. This does not have any impact on who can access the
                  product, it is just used to inform consumers through our clients.
            additionalProperties: false
            default: {}
        additionalProperties: false
        default: {}
      logo_url:
        type: string
        description: |
          Logo used for Provider and Product listings.

          Must be square (same width and height) and minimum 400px. Maximum of 800px.
        format: url
        pattern: ^https:\/\/cdn\.(?:stage\.)?manifold.co
      tagline:
        description: |
          140 character sentence positioning the product.
        type: string
        maxLength: 140
        x-nullable: false
      value_props:
        description: A list of value propositions of the product.
        type: array
        items:
          type: object
          properties:
            header:
              description: Heading of a value proposition.
              type: string
              minLength: 3
              maxLength: 80
              x-nullable: false
            body:
              description: Body of a value proposition.
              type: string
              minLength: 10
              maxLength: 500
              x-nullable: false
          additionalProperties: false
          required:
          - header
          - body
        maxItems: 8
        x-nullable: false
      images:
        type: array
        items:
          type: string
          description: |
            Image URL used for Product listings.

            Minimum 660px wide, 400px high.
          format: url
          pattern: ^https:\/\/cdn\.(?:stage\.)?manifold.co
        maxItems: 8
        x-nullable: false
      support_email:
        type: string
        format: email
        x-nullable: false
      documentation_url:
        type: string
        format: url
      terms:
        description: |
          URL to this Product's Terms of Service. If provided is true, then
          a url must be set. Otherwise, provided is false.
        type: object
        properties:
          url:
            type: string
            format: url
          provided:
            type: boolean
            x-nullable: false
        additionalProperties: false
        required:
        - url
        - provided
      feature_types:
        type: array
        items:
          $ref: '#/definitions/CatalogFeatureType'
      billing:
        type: object
        properties:
          type:
            type: string
            enum:
            - monthly-prorated
          currency:
            type: string
            enum:
            - usd
        additionalProperties: false
        required:
        - type
        - currency
      integration:
        type: object
        properties:
          provisioning:
            type: string
            enum:
            - provider-only
            - pre-order
            - public
            description: |
              Provider Only, implies that the product should only be provisionable by the
                provider; so members of the provider team, no one else should be allowed.
              Pre-Order, should not be used yet. But in the future it should allow people to
                pre-provision a resource for when it does go live.
              Public, means the resource is live and everyone should be able to provision it.
          base_url:
            type: string
            format: url
          sso_url:
            type: string
            format: url
            x-nullable: true
          version:
            type: string
            enum:
            - v1
          features:
            type: object
            properties:
              access_code:
                description: |
                  Indicates whether or not this product supports resource transitions to
                  manifold by access_code.
                type: boolean
                x-nullable: false
              sso:
                description: |
                  Represents whether or not this product supports Single
                  Sign On
                type: boolean
                x-nullable: false
              plan_change:
                description: |
                  Represents whether or not this product supports changing
                  the plan of a resource.
                type: boolean
                x-nullable: false
              region:
                description: |
                  Describes how the region for a resource is specified, if
                  unspecified, then regions have no impact on this
                  resource.
                type: string
                enum:
                - user-specified
                - unspecified
            additionalProperties: false
            default: {}
        additionalProperties: false
        required:
        - provisioning
        - base_url
        - version
        - features
      tags:
        type: array
        description: List of tags for product categorization and search
        items:
          $ref: '#/definitions/Label'
    additionalProperties: false
    required:
    - provider_id
    - label
    - name
    - state
    - listing
    - logo_url
    - tagline
    - value_props
    - images
    - support_email
    - terms
    - documentation_url
    - feature_types
    - billing
    - integration
  CatalogExpandedPlanBody:
    x-go-type:
      type: ExpandedPlanBody
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
      label:
        $ref: '#/definitions/Label'
      state:
        $ref: '#/definitions/CatalogPlanState'
      features:
        type: array
        description: Array of Feature Values
        items:
          $ref: '#/definitions/CatalogFeatureValue'
      cost:
        type: integer
        minimum: 0
        description: |
          Dollar value in cents.
        additionalProperties: false
      expanded_features:
        type: array
        description: |
          An array of feature definitions for the plan, as defined on the Product.
        items:
          $ref: '#/definitions/CatalogExpandedFeature'
      free:
        type: boolean
        description: |
          A boolean flag that indicates if a plan is free or not based on it's cost and features.
      defaultCost:
        type: integer
        description: |
          Plan cost using its default features plus base cost.
      customizable:
        type: boolean
        description: |
          A boolean flag that indicates if a plan has customizable features.
    additionalProperties: false
    required:
    - name
    - label
    - state
    - features
    - cost
    - expanded_features
    - free
  CatalogPlanState:
    x-go-type:
      type: PlanState
      import:
        package: github.com/manifoldco/marketplace/catalog/generated/v1/models
        alias: catalogmodels
    type: string
    enum:
    - hidden
    - available
    - grandfathered
    - unlisted
  Error:
    type: object
    properties:
      id:
        description: An opaque identifier for this error occurance
        type: string
      type:
        description: The error type
        type: string
        enum:
        - error
      code:
        description: A machine readable string representing the HTTP status code for
          this error
        type: string
        enum:
        - bad_request
        - not_found
        - unauthorized
        - forbidden
        - conflict
        - unprocessable_entity
        - internal
        - not_implemented
        - methods_not_allowed
      class:
        description: |
          A machine readable string representing the details error subclass. Valid values are based
          on the value of the code, and the request being made.
        type: string
        enum:
        - validation
        - internal
        - insufficient_priviledges
      message:
        type: string
        description: A human readable description of the error, suitable for UI display
    required:
    - id
    - type
    - code
    - class
    - message
    x-go-type:
      type: Error
      import:
        package: github.com/manifoldco/marketplace/errors
  FeatureMap:
    type: object
    additionalProperties: true
    x-go-type:
      type: FeatureMap
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Label:
    type: string
    description: A machine readable unique label, which is url safe.
    pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
    x-go-type:
      type: Label
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Location:
    type: string
    description: A location of where a potential resource can be provisioned.
    pattern: ^[a-z0-9][a-z0-9\-]{1,128}$
  ImageURL:
    type: string
    description: |
      Logo used for Provider and Product listings.

      Must be square (same width and height) and minimum 400px. Maximum of 800px.
    format: url
    pattern: ^https:\/\/cdn\.(?:stage\.)?manifold.co
  ID:
    type: string
    description: A base32 encoded 18 byte identifier.
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Name:
    type: string
    description: A name of an entity which is displayed to a human.
    pattern: ^[a-zA-Z0-9][a-z0-9A-Z\. \-_]{2,128}$
    x-go-type:
      type: Name
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  OptionalID:
    type: string
    description: A base32 encoded 18 byte identifier.
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-nullable: true
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Owner:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      type:
        type: string
        enum:
        - team
        - user
      name:
        $ref: '#/definitions/OwnerDisplayName'
    required:
    - id
    - type
  OwnerDisplayName:
    type: string
    minLength: 0
    maxLength: 64
  ProductTags:
    type: array
    description: List of tags for product categorization and search
    items:
      $ref: '#/definitions/Label'
  ResolvedPlan:
    type: object
    allOf:
    - $ref: '#/definitions/CatalogExpandedPlanBody'
    - type: object
      properties:
        id:
          $ref: '#/definitions/ID'
      required:
      - id
  ResolvedProduct:
    type: object
    allOf:
    - $ref: '#/definitions/CatalogProductBody'
    - type: object
      properties:
        id:
          $ref: '#/definitions/ID'
        provider:
          $ref: '#/definitions/ResolvedProvider'
        plans:
          type: array
          items:
            $ref: '#/definitions/ResolvedPlan'
        listing_labels:
          type: array
          description: |
            An array of marketing labels for the product listing, generated from the product details.
          items:
            $ref: '#/definitions/Label'
      required:
      - id
      - listing_labels
  ResolvedProject:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      name:
        $ref: '#/definitions/Name'
      label:
        $ref: '#/definitions/Label'
  ResolvedProvider:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      name:
        $ref: '#/definitions/Name'
      label:
        $ref: '#/definitions/Label'
  ResolvedRegion:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      name:
        type: string
        x-nullable: false
  ResolvedFeature:
    type: object
    properties:
      label:
        $ref: '#/definitions/Label'
      name:
        $ref: '#/definitions/Name'
      measured:
        type: boolean
        default: false
        x-nullable: false
      type:
        type: string
        enum:
        - boolean
        - string
        - number
      value:
        type: object
        properties:
          value:
            type: object
          displayValue:
            type: string
          suffix:
            type: string
            description: Applied to the end of the number for display, for example
              the ‘GB’ in ‘20 GB’.
            x-nullable: true
          price:
            type: object
            properties:
              cost:
                type: integer
                minimum: 0
                default: 0
                x-nullable: false
              multiply_factor:
                type: number
                minimum: 0
                default: 0
                x-nullable: true
              formula:
                type: string
                x-nullable: true
            required:
            - multiply_factor
            - formula
    additionalProperties: false
    required:
    - label
    - name
    - type
    - value
  ResolvedValueProp:
    type: object
    properties:
      header:
        description: Heading of a value proposition.
        type: string
      body:
        description: Body of a value proposition.
        type: string
    additionalProperties: false
    required:
    - header
    - body
  ResourceCreateRequest:
    type: object
    allOf:
    - $ref: '#/definitions/ResourceBodyWrite'
    - $ref: '#/definitions/ResourceBodySource'
    - type: object
      properties:
        product_id:
          $ref: '#/definitions/OptionalID'
        plan_id:
          $ref: '#/definitions/OptionalID'
        region_id:
          $ref: '#/definitions/OptionalID'
        project_id:
          $ref: '#/definitions/OptionalID'
        features:
          $ref: '#/definitions/FeatureMap'
        annotations:
          $ref: '#/definitions/AnnotationsMap'
  ResourceUpdateRequest:
    type: object
    allOf:
    - $ref: '#/definitions/ResourceBodyWrite'
    - type: object
      properties:
        plan_id:
          $ref: '#/definitions/OptionalID'
        project_id:
          $ref: '#/definitions/OptionalID'
        features:
          $ref: '#/definitions/FeatureMap'
        annotations:
          $ref: '#/definitions/AnnotationsMap'
  Resource:
    type: object
    allOf:
    - $ref: '#/definitions/ResourceBodyFeatures'
    - $ref: '#/definitions/Timed'
    - type: object
      properties:
        id:
          $ref: '#/definitions/ID'
        product:
          $ref: '#/definitions/ResolvedProduct'
        plan:
          $ref: '#/definitions/ResolvedPlan'
        region:
          $ref: '#/definitions/ResolvedRegion'
        project:
          $ref: '#/definitions/ResolvedProject'
        estimated_cost:
          $ref: '#/definitions/Price'
        metadata:
          $ref: '#/definitions/Metadata'
        annotations:
          $ref: '#/definitions/AnnotationsMap'
      required:
      - id
      - plan
      - product
  ResourceBody:
    type: object
    allOf:
    - $ref: '#/definitions/ResourceBodyRequired'
    - $ref: '#/definitions/ResourceBodyReadSource'
  ResourceBodyFeatures:
    type: object
    allOf:
    - $ref: '#/definitions/ResourceBodyRequired'
    - $ref: '#/definitions/ResourceBodyReadFeatures'
  ResourceBodyWrite:
    type: object
    properties:
      label:
        $ref: '#/definitions/Label'
      owner:
        $ref: '#/definitions/Owner'
  ResourceBodyRequired:
    type: object
    properties:
      label:
        $ref: '#/definitions/Label'
      owner:
        $ref: '#/definitions/Owner'
    required:
    - owner
    - label
  ResourceBodyReadFeatures:
    type: object
    allOf:
    - $ref: '#/definitions/ResourceBodyReadSource'
    - type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/definitions/ResolvedFeature'
      required:
      - features
  ResourceBodyRead:
    type: object
    properties:
      type:
        type: string
        enum:
        - resource
      state:
        type: string
        enum:
        - provision
        - transfer
        - resize
        - move
        - deprovision
        - project_delete
        - available
        default: available
      operation:
        type: object
        properties:
          status:
            type: string
          state:
            type: string
          message:
            type: string
    required:
    - type
    additionalProperties: false
  ResourceBodyReadSource:
    type: object
    allOf:
    - $ref: '#/definitions/ResourceBodySource'
    - $ref: '#/definitions/ResourceBodyRead'
  ResourceBodySource:
    type: object
    properties:
      source:
        type: string
        enum:
        - catalog
        - custom
        default: catalog
    required:
    - source
  PlanCostRequest:
    type: object
    properties:
      features:
        $ref: '#/definitions/FeatureMap'
    additionalProperties: false
    required:
    - features
  Timed:
    type: object
    properties:
      created_at:
        type: string
        format: datetime
      updated_at:
        type: string
        format: datetime
    required:
    - created_at
    - updated_at
  PlanCostResponse:
    $ref: '#/definitions/Price'
  Price:
    type: object
    properties:
      cost:
        type: integer
      currency:
        type: string
    required:
    - cost
    - currency
    additionalProperties: false
  Metadata:
    type: object
    description: A map of keys to MetadataValue definitions
    additionalProperties: true
    example:
      size:
        type: string
        value: 40 GB
      e-mails:
        type: int
        value: 1000
      read-replica:
        type: bool
        value: true
      user-profile:
        type: object
        value:
          score:
            type: float
            value: 40.4
    x-go-type:
      type: Metadata
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  MetadataValue:
    type: object
    description: A typed metadata value definition
    properties:
      type:
        type: string
        enum:
        - int
        - float
        - bool
        - string
        - object
      value:
        type: object
    additionalProperties: false
    example:
      type: bool
      value: false
    x-go-type:
      type: MetadataValue
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  AnnotationsMap:
    type: object
    description: A map of annotations labels to an array of values
    additionalProperties: true
    example:
      manifold.co/tool:
      - NPM
      manifold.co/environement:
      - Stage
      - Prod
      project:
      - Test
    x-go-type:
      type: AnnotationsMap
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold